// Generated by conversion of Modelica_Requirements
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.WithinAbsoluteDomain1","sine2.freqHz","sine2.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.WithinAbsoluteDomain1","sine3.freqHz","sine3.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.WithinAbsoluteDomain2","sine2.freqHz","sine2.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.WithinAbsoluteDomain2","sine3.freqHz","sine3.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.WithinAbsoluteDomain2","sine5.freqHz","sine5.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.WithinRelativeDomain1","sine2.freqHz","sine2.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.WithinRelativeDomain1","sine3.freqHz","sine3.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.WithinRelativeDomain2","sine2.freqHz","sine2.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.WithinRelativeDomain2","sine3.freqHz","sine3.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.WithinRelativeDomain2","sine5.freqHz","sine5.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.MaxTotalHamonicDistortion1","sine1.freqHz","sine1.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.MaxTotalHamonicDistortion1","sine2.freqHz","sine2.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.MaxTotalHamonicDistortion1","sine3.freqHz","sine3.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.MaxTotalHamonicDistortion1","sine4.freqHz","sine4.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.MaxTotalHamonicDistortion1","sine5.freqHz","sine5.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.MaxTotalHamonicDistortion2","sine1.freqHz","sine1.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.MaxTotalHamonicDistortion2","sine2.freqHz","sine2.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.MaxTotalHamonicDistortion2","sine3.freqHz","sine3.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.MaxTotalHamonicDistortion2","sine4.freqHz","sine4.f");
convertElement("Modelica_Requirements.Examples.Elementary.ChecksInFixedWindow_withFFT.MaxTotalHamonicDistortion2","sine5.freqHz","sine5.f");
convertElement("Modelica_Requirements.Examples.Elementary.SignalAnalysis.Derivatives","sine.freqHz","sine.f");
convertElement("Modelica_Requirements.Examples.Elementary.SignalAnalysis.Integrator","sine.freqHz","sine.f");
convertElement("Modelica_Requirements.Examples.Elementary.SignalAnalysis.MovingAverage","sine.freqHz","sine.f");
convertElement("Modelica_Requirements.Examples.Elementary.SignalAnalysis.CrossingMonitoring","sine.freqHz","sine.f");
convertElement("Modelica_Requirements.Examples.Elementary.LogicalBlocks.ThresholdComparisons","sine.freqHz","sine.f");
